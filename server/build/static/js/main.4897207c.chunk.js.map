{"version":3,"sources":["hooks/useInput.js","views/LoginPage.js","views/CreateAccountPage.js","components/Group.js","components/Groups.js","components/UserCard.js","components/GroupInviteItem.js","components/GroupInvites.js","components/NewGroupForm.js","reducers/chatReducer.js","contexts/chatContext.js","reducers/navReducer.js","contexts/navContext.js","components/LeftNav.js","components/Navbar.js","components/Message.js","components/DateDivider.js","components/ChatWindow.js","components/ChatInput.js","components/MemberResultCard.js","components/AddMember.js","components/GroupDescription.js","components/GroupMembers.js","components/RightNav.js","components/ChatRoom.js","views/ChatPage.js","App.js","serviceWorker.js","index.js"],"names":["useInput","initial","useState","input","setInput","e","target","value","LoginPage","loggedIn","setUserData","username","setUsername","password","setPassword","history","useHistory","to","className","onSubmit","preventDefault","axios","post","withCredentials","then","response","data","push","catch","error","console","log","TextField","type","name","id","label","variant","onChange","Button","CreateAccountPage","res","htmlFor","Group","index","setGroup","ListItem","style","padding","fontSize","onClick","button","useStyles","makeStyles","root","textAlign","margin","header","display","alignItems","justifyContent","headerText","fontWeight","list","Groups","openNewGroup","groups","classes","aria-label","Typography","IconButton","create","color","size","List","map","group","key","alignSelf","avatar","marginBottom","UserCard","Avatar","toUpperCase","text","marginLeft","icon","buttons","marginRight","GroupInviteItem","groupName","groupId","acceptInvite","declineInvite","GroupInvites","pendingInvites","_id","position","top","zIndex","height","width","background","hidden","paper","maxWidth","loadbar","form","flexDirection","textInput","NewGroup","createNewGroup","close","newGroup","setNewGroup","description","setDescription","status","err","inputErr","setInputErr","loading","setLoading","nameInputRef","useRef","useEffect","current","children","focus","checkEmpty","trim","sendData","a","async","handleClose","ClickAwayListener","onClickAway","Paper","LinearProgress","ref","helperText","disabled","reducer","state","action","newGroupState","newPendingState","newUserState","newSelectedState","createMemberMap","members","hashMap","member","payload","memberMap","activeMembers","room","newMessages","messages","message","selected","length","newPendingMembers","pendingMembers","memberId","user","groupInvites","filter","ChatContext","createContext","ChatProvider","props","useReducer","chatReducer","chatData","chatDispatch","Provider","prevRightNav","prevLeftNav","rightNav","addMem","open","drawer","leftNav","initialState","NavContext","NavProvider","navReducer","navData","navDispatch","border","overflow","divider","backgroundColor","LeftNav","joinRoom","updateMembers","useContext","newGroupOpen","Divider","get","delete","Hidden","xsDown","smUp","Drawer","ModalProps","onBackdropClick","NewGroupForm","newGroupName","groupData","nav","tool","rightmenu","left","Navbar","setOpen","anchorRef","event","contains","handleListKeyDown","prevOpen","React","handleLogOut","handleAddMem","AppBar","Toolbar","mdUp","aria-controls","undefined","aria-haspopup","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","MenuList","autoFocusItem","onKeyDown","MenuItem","smDown","useStyle","span","Message","date","Date","time","format","transform","borderRadius","whiteSpace","DateDivider","flexGrow","flexShrink","wordBreak","ChatWindow","currentGroup","results","dates","i","formatedDate","formatMessages","uuid","ChatInput","onConfirm","setMessage","clearMessage","handleClick","onKeyPress","add","MemberResultCard","statusButton","userId","sendInvite","maxHeight","AddMember","filterResults","closeAddMem","searchResults","setSearchResults","url","searchUser","Input","placeholder","result","GroupDescription","GroupMembers","groupMembers","RightNav","updateInvite","addMemStatus","groupIndex","selectedGroupId","currUserId","groupDescription","pendingRequests","anchor","filtered","activeMembersId","includes","ChatRoom","newMessage","socket","middle","Chat","loaded","setLoaded","io","on","forEach","emit","roomId","App","userData","exact","path","ChatPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4897207c.chunk.js","sourcesContent":["import {useState} from 'react';\n\nfunction useInput(initial = ''){\n    const [input, setInput] = useState(initial);\n    const onChange = e =>{\n        setInput(e.target.value);\n    }\n    const reset = () =>{\n        setInput('');\n    }\n    return [input, onChange, reset];\n}\n\nexport default useInput;","import React from 'react';\nimport useInput from '../hooks/useInput';\nimport {Link, Redirect, useHistory} from 'react-router-dom';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport './LoginPage.css'\n\nfunction LoginPage({loggedIn, setUserData}){\n    const [username, setUsername] = useInput();\n    const [password, setPassword] = useInput();\n    let history = useHistory();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios.post('/api/actions/login', {\n            username:username,\n            password:password,\n            withCredentials:true\n        })\n        .then( response => {\n            if(response.data.loggedIn){\n                setUserData(response.data);\n                history.push('/chat');\n            }\n        }) \n        .catch( error => console.log(error));\n    }\n\n    if(loggedIn){\n        return <Redirect to='/chat' />\n    } else {\n        return(\n            <div className='LoginPage' >\n                <form onSubmit={handleSubmit}>\n                    <h1>Sign In</h1>\n                    <TextField className='sign-in' type='text' name='username' id='username' \n                    label='Username' variant='outlined' value={username} \n                    onChange={setUsername} />\n                    <TextField className='sign-in' type=\"password\" name='password' id='password' \n                    label='Password' variant='outlined' value={password} \n                    onChange={setPassword} />\n                    <Button type='submit' variant=\"outlined\">Login</Button>\n                    <Link to='/users/new'>Create User</Link>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default LoginPage; ","import React from 'react';\nimport useInput from '../hooks/useInput';\nimport axios from 'axios';\nimport './CreateAccountPage.css'\n\nfunction CreateAccountPage(){\n    const [username, setUsername] = useInput();\n    const [password, setPassword] = useInput();\n\n    const handleSubmit = (e) =>{\n        e.preventDefault()\n        axios.post('/api/users/new', {\n            username:username, \n            password:password, \n            withCredentials:true\n        })\n        .then( res => {\n            console.log(res);\n        })\n    }\n    \n    return(\n        <div className='CreateAccountPage' >\n            <form onSubmit={handleSubmit}>\n                <h1>Create an Account</h1>\n                <label htmlFor=\"username\">Username</label>\n                <input type=\"text\" name='username' id='username' value={username} onChange={setUsername} />\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" name='password' id='password' value={password} onChange={setPassword} />\n                <button>Sign Up</button>\n            </form>\n        </div>\n    );\n}\n\nexport default CreateAccountPage; ","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\n\nfunction Group({name, id, index, setGroup}){\n    const handleClick = () => {\n        setGroup(id, name, index);\n    }\n    return(\n        <ListItem style={{padding:'2px 15px 2px 30px', fontSize:'0.85rem'}} onClick={handleClick} button>\n            {name}\n        </ListItem>\n    );\n}\n\nexport default Group;","import React from 'react';\nimport Group from './Group';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/styles';\n\n\nconst useStyles = makeStyles({\n    root:{\n        padding: '10px 0px',\n        textAlign: 'center',\n        margin: 0\n    },\n    header:{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: '0 15px'\n    },\n    headerText:{\n        fontWeight: 700,\n    },\n    list:{\n        padding: 0\n    }\n});\n\nfunction Groups({openNewGroup, groups, setGroup}){\n    const classes = useStyles();\n\n    return(\n        <div className={classes.root} aria-label='group-nav'>\n            <div className={classes.header}>\n                <Typography className={classes.headerText}>Groups</Typography>\n                <IconButton className={classes.create} color='inherit' size='small' onClick={openNewGroup}>\n                    <AddCircleOutlineIcon fontSize='inherit'/>\n                </IconButton>\n            </div>\n            <List className={classes.list}>\n            {groups.map( (group, index) => <Group id={group.id} name={group.name} \n            key={group.id} setGroup={setGroup} index={index} />)}    \n            </List>\n        </div> \n    )\n}\n\nexport default Groups;","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport {makeStyles} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    root:{\n        padding: '20px 0px',\n        textAlign: 'center',\n        alignSelf: 'center'\n    },\n    avatar:{\n        marginBottom: '10px'\n    }\n});\n\nexport default function UserCard({username}) {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Avatar className={classes.avatar}>{username[0].toUpperCase()}</Avatar>\n            <Typography>{username}</Typography>\n        </div>\n    )\n}\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {makeStyles} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    root:{\n        display:'flex',\n        justifyContent: 'space-between',\n        padding: 0\n    },\n    text:{\n        fontSize:'0.85rem',\n        marginLeft: '10px'\n    },\n    icon:{\n        color:'white',\n        fontSize: '1rem'\n    },\n    buttons:{\n        display:'flex',\n        marginRight: '10px'\n    }\n});\n\n\nexport default function GroupInviteItem({groupName, groupId, acceptInvite, declineInvite}) {\n    const classes = useStyles();\n\n    const handleAccept = () => {\n        acceptInvite(groupId);\n    }\n    const handleDecline = () =>{\n        declineInvite(groupId);\n    }\n\n    return (\n        <ListItem className={classes.root}>\n            <Typography className={classes.text}>{groupName}</Typography>\n            <div className={classes.buttons}>\n                <IconButton size='small' onClick={handleAccept}>\n                    <CheckIcon className={classes.icon} />\n                </IconButton>\n                <IconButton size='small' onClick={handleDecline}>\n                    <CloseIcon className={classes.icon} />\n                </IconButton>\n            </div>\n        </ListItem>\n    )\n}\n","import React from 'react';\nimport GroupInviteItem from './GroupInviteItem';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport {makeStyles} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    root:{\n        padding: '10px 0px',\n        textAlign: 'center',\n        margin: 0\n    },\n    headerText:{\n        fontWeight: 700,\n    },\n    list:{\n        padding: 0,\n        margin: 0,\n    }\n});\n\nexport default function GroupInvites({pendingInvites, acceptInvite, declineInvite}) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root} aria-label='group-invites'>\n            <Typography className={classes.headerText}>Pending Invites</Typography>\n            <List className={classes.list}>\n                {pendingInvites.map(group => <GroupInviteItem key={group._id}\n                                                groupName={group.groupName}\n                                                groupId={group._id} \n                                                acceptInvite={acceptInvite} \n                                                declineInvite={declineInvite}/>)}\n            </List>\n        </div>\n    )\n}\n","import React, {useState, useRef, useEffect} from 'react';\nimport useInput from '../hooks/useInput';\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport {makeStyles} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    root:{\n        display: 'flex',\n        position: 'fixed',\n        top: 0,\n        zIndex: 5000,\n        height: '100%',\n        width: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: 'rgba(0,0,0,0.4)'\n    },\n    hidden:{\n        display: 'none',\n    },\n    paper:{\n        width: '70%',\n        maxWidth: '500px',\n        padding: '30px 30px'\n    },\n    loadbar:{\n        marginBottom: '10px'\n    },\n    form:{\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    textInput:{\n        marginBottom: '15px'\n    }\n})\n\nfunction NewGroup({createNewGroup, close}){\n    const [newGroup, setNewGroup] = useInput('');\n    const [description, setDescription] = useInput('');\n    const [inputErr, setInputErr] = useState({status:false, err:''})\n    const [loading, setLoading] = useState(false);\n    const nameInputRef = useRef(null);\n    const classes = useStyles();\n\n    useEffect(()=>{\n        //targets the group name textfield \n        nameInputRef.current.children[1].children[0].focus();\n    },[loading])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(!checkEmpty(newGroup)){\n            setLoading(true);\n            sendData();\n        }\n    }\n\n    //checks if group field is empty\n    const checkEmpty = (input) => {\n        if(input.trim() === ''){\n            setInputErr({status:true, err:'This field is required.'})\n            return true;\n        }\n        return false;\n    }\n\n    //sends data to backend and edits form based on response\n    const sendData = async () =>{\n        const res = await createNewGroup(newGroup, description)\n        setLoading(false);\n        if(res === 1){\n            handleClose();\n        } else if (res === 0){\n            setInputErr({status:true, err:'A group with this name already exists.'})\n        } else {\n            setInputErr({status:true, err:'An error occured while processing your request.'})\n        }\n    }\n\n    // resets all values\n    const handleClose = () =>{\n        close();\n    }\n\n    // clears errors and updates state\n    const handleGroupChange=(e)=>{\n        setNewGroup(e);\n    }\n\n    return(\n        <div className={classes.root}>\n                <ClickAwayListener onClickAway={handleClose}>\n                    <Paper className={classes.paper}>\n                        <LinearProgress className={loading ? classes.loadbar : classes.hidden} />\n                        <form className={classes.form} onSubmit={handleSubmit}>\n                            <TextField ref={nameInputRef} className={classes.textInput} label='Group Name' \n                            id='Group Name' type='text' name='newGroupName' \n                            value={newGroup} onChange={handleGroupChange} error={inputErr.status}\n                            helperText={inputErr.err} disabled={loading} />\n                            <TextField className={classes.textInput}  label='Group Description' \n                            id='Group Description' type='text' name='newGroupDescription' \n                            value={description} onChange={setDescription} disabled={loading}/>\n                            <Button type='submit' disabled={loading}>Create Group</Button>\n                            <Button onClick={handleClose} disabled={loading}>Close</Button>\n                        </form>\n                    </Paper>\n                </ClickAwayListener>\n        </div>\n    );\n}\n\nexport default NewGroup;","function reducer(state, action){\n    let newGroupState, newPendingState, newUserState, newSelectedState;\n\n    //create a hashtable using the memberID as a key and the member info as the value\n    const createMemberMap = (members) => {\n        let hashMap = {};\n        members.map( member => hashMap[member._id] = {username: member.username});\n        return hashMap;\n    }\n\n    switch(action.type){\n        // gathers all chat data {type: 'INIT', payload: *}\n        case \"INIT\":\n            //loops through each group and creates a member hashtable in each\n            newGroupState = action.payload.groups.map(group => {\n                const memberMap = createMemberMap(group.activeMembers);\n                group.memberMap = memberMap;\n                return group;\n            });\n            action.payload.groups = newGroupState;\n            return action.payload;\n        // inputs new message in state {type:'NEW_MSG, room: *, message: *}\n        case \"NEW_MSG\":\n            newGroupState = state.groups.map( group => {\n                if(group._id === action.room ){\n                    const newMessages = [...group.messages, action.message];\n                    return {...group, messages:newMessages};\n                } else {\n                    return group;\n                }\n            });\n            return {...state, groups:newGroupState};\n        // adds new a new group {type:'ADD_GROUP', payload: *}\n        case \"ADD_GROUP\":\n            //create hashmap of new group members\n            action.payload.memberMap = createMemberMap(action.payload.activeMembers);\n            newGroupState = [...state.groups, action.payload];\n            newSelectedState = {...state.selected, _id: action.payload._id, \n                                name: action.payload.groupName, index: newGroupState.length-1};\n            return {...state, groups:newGroupState, selected:newSelectedState};\n        // changes the current view of the chat page {type:'CHANGE_GROUP, selected:*, name:*, index:*}\n        case \"CHANGE_GROUP\":\n            return {...state, selected: {_id: action.selected, name:action.name, type:'group', index:action.index}}\n        // adds a new member to a group {type:'ADD_MEMBER', groupId:*, memberId:*}\n        case \"ADD_MEMBER\":\n            newGroupState = state.groups.map( group => {\n                if(group._id === action.groupId){\n                    let newPendingMembers = group.pendingMembers;\n                    newPendingMembers.push(action.memberId);\n                    return {...group, pendingMembers: newPendingMembers};\n                } else {\n                    return group;\n                }\n            });\n            return {...state, groups:newGroupState};\n        // updates member list {type:'UPDATE_MEMBERS',groupId:*, payload:*}\n        case \"UPDATE_MEMBERS\":\n            newGroupState = state.groups.map( group => {\n                if(group._id === action.groupId){\n                    return {...group, ...action.payload, memberMap: createMemberMap(action.payload.activeMembers)};\n                } else {\n                    return group;\n                }\n            });\n            return {...state, groups:newGroupState};\n        // updates pending invites state {type:'UPDATE_PENDING', payload:*}\n        case \"UPDATE_PENDING\":\n            newPendingState = action.payload;\n            newUserState = {...state.user, groupInvites: newPendingState};\n            return {...state, user:newUserState};\n        // decline invite {type:'DECLINE_INVITE, id:*}\n        case \"DECLINE_INVITE\":\n            newPendingState = state.user.groupInvites.filter( group => group._id !== action.id);\n            newUserState = {...state.user, groupInvites: newPendingState};\n            return {...state, user:newUserState};\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React, {createContext, useReducer} from 'react';\nimport chatReducer from '../reducers/chatReducer';\n\nexport const ChatContext = createContext();\n\nexport function ChatProvider(props){\n    const [chatData,chatDispatch] = useReducer(chatReducer, \"\");\n    return(\n        <ChatContext.Provider value={{chatData, chatDispatch}}>\n            {props.children}\n        </ChatContext.Provider>\n    )\n}","function reducer(state, action){\n    let prevRightNav, prevLeftNav;\n    switch(action.type){\n        //opens/close add member selection\n        case 'ADDMEM':\n            prevRightNav = state.rightNav;\n            return {...state, rightNav:{...prevRightNav, addMem:action.open}};\n        //opens/close right nav\n        case 'RIGHT':\n            prevRightNav = state.rightNav;\n            return {...state, rightNav:{...prevRightNav, root:action.open}};\n        case 'RIGHTDRAWER':\n            prevRightNav = state.rightNav;\n            return {...state, rightNav:{...prevRightNav, drawer:action.open}};\n        //opens/close left nav\n        case 'LEFTDRAWER':\n            prevLeftNav = state.leftNav;\n            return {...state, leftNav:{...prevLeftNav, drawer:action.open}};\n        //Shows add member selection\n        case 'NEWGROUP':\n            prevLeftNav = state.leftNav;\n            return {...state, leftNav:{...prevLeftNav, newGroup:action.open}};\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React, {createContext, useReducer} from 'react';\nimport navReducer from '../reducers/navReducer';\n\nconst initialState = {\n    rightNav:{\n        root:true,\n        drawer: false,\n        addMem:false\n    },\n    leftNav:{\n        root: true,\n        drawer: false,\n        newGroup: false\n    }\n}\n\nexport const NavContext = createContext();\n\nexport function NavProvider(props){\n    const [navData , navDispatch] = useReducer(navReducer, initialState);\n    return(\n        <NavContext.Provider value={{navData, navDispatch}}>\n            {props.children}\n        </NavContext.Provider>\n    )\n}","import React, {useContext} from 'react';\nimport Groups from './Groups';\nimport UserCard from './UserCard';\nimport GroupInvites from './GroupInvites'\nimport NewGroupForm from './NewGroupForm';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport Drawer from '@material-ui/core/Drawer';\nimport {makeStyles} from '@material-ui/styles';\nimport {ChatContext} from '../contexts/chatContext';\nimport {NavContext} from '../contexts/navContext';\nimport axios from 'axios';\n\n\nconst useStyles = makeStyles({\n    root:{\n        width: '250px',\n        height: '100%',\n        border: 'none',\n        background: '#424242', \n        overflow: 'auto'\n    },\n    paper:{\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '10px',\n        color: 'white',\n    },\n    divider:{\n        width: '85%',\n        backgroundColor: '#616161'\n    }\n});\n\n\nexport default function LeftNav({joinRoom,updateMembers}) {\n    const {chatData, chatDispatch} = useContext(ChatContext);\n    const {navData, navDispatch} = useContext(NavContext);\n    const classes = useStyles();\n\n    //\n    // GROUPS\n    //\n\n    const setGroup = (id, name, index) => {\n        chatDispatch({type:'CHANGE_GROUP', selected:id, name:name, index:index});\n        navDispatch({type:'LEFT', open: false});\n        navDispatch({type:'LEFTDRAWER', open: false});\n    }\n\n    const groups = chatData.groups.map( group => {return {name:group.groupName, id:group._id}});\n\n\n    //\n    // NEW GROUP FORM\n    //\n\n    const newGroupOpen = navData.leftNav.newGroup;\n    const openNewGroup = () => {\n        navDispatch({type:'NEWGROUP', open:true});\n        navDispatch({type:'LEFTDRAWER', open: false});\n    }\n    const closeNewGroup = () => {\n        navDispatch({type:'NEWGROUP', open:false});\n    }\n\n    const createNewGroup = async (newGroupName, description) => {\n        const res = await axios.post('/api/groups/', {\n            newGroupName:newGroupName,\n            description:description,\n            withCredentials:true\n        })\n\n        if(res.data.status === 1){\n            const groupData = res.data.data[0];\n            chatDispatch({type:'ADD_GROUP', payload: groupData});\n            joinRoom(groupData._id);\n            return 1;\n        } else if(res.data.status === 0){\n            return 0;\n        } else {\n            return -1;\n        }  \n    }\n\n    //\n    // PENDING INVITES\n    //\n    const username = chatData.user.username;\n    const pendingInvites = chatData.user.groupInvites;\n\n    const acceptInvite = async (groupId) => {\n        try{\n            //send request to update user data in backend\n            let res = await axios.post('/api/users/pendinginvites/' + groupId, {withCredentials:true})\n            // if successful, fetch new group data\n            if (res.data.status === 1){\n                res = await axios.get('/api/groups/' + groupId, {withCredentials:true});\n                if(res.data.status === 1){\n                    // add group data to state\n                    chatDispatch({type:'ADD_GROUP', payload: res.data.data[0]});\n                    // remove pending invite from state\n                    chatDispatch({type:'DECLINE_INVITE', id:groupId});\n                    joinRoom(groupId);\n                    updateMembers(groupId);\n                }\n            }\n        } catch (err) {\n            console.log(err);\n        }\n        \n    }\n    const declineInvite = (groupId) => {\n        //send request to update user data in backend\n        axios.delete('/api/users/pendinginvites/' + groupId, {withCredentials:true})\n        .then(res => {\n            //remove pending invite from state\n            if(res.data.status === 1){\n                chatDispatch({type:'DECLINE_INVITE', id:groupId});\n                updateMembers(groupId);\n            }\n        })\n        .catch(err => console.log(err));\n    }\n\n    //\n    // LEFT NAV\n    //\n\n    //closes left menu on clickaway\n    const handleLeftClickAway = () => {\n        if(!navData.leftNav.newGroup){\n            navDispatch({type:'LEFTDRAWER', open:false});\n        }\n    }\n\n    const leftNav = <div className={classes.root}>\n                        <div className={classes.paper}>\n                            <UserCard username={username} />\n                            <Divider className={classes.divider} variant='middle' />\n                            <Groups openNewGroup={openNewGroup} setGroup={setGroup} groups={groups} />\n                            {chatData.user.groupInvites.length > 0 \n                                ?   (<>\n                                        <Divider className={classes.divider} variant='middle' />\n                                        <GroupInvites pendingInvites={pendingInvites} \n                                        acceptInvite={acceptInvite} \n                                        declineInvite={declineInvite} />\n                                    </>)\n                                : ''}\n                        </div>\n                    </div>\n\n    return (\n        <>\n            <Hidden xsDown>\n                {leftNav}\n            </Hidden>\n            <Hidden smUp>\n                <Drawer open={navData.leftNav.drawer} ModalProps={{ onBackdropClick: handleLeftClickAway }}>\n                    {leftNav}\n                </Drawer>\n            </Hidden>\n        \n            {newGroupOpen ? <NewGroupForm createNewGroup={createNewGroup} close={closeNewGroup} /> : ''}\n        </>\n    )\n}\n","import React, {useContext, useRef, useState, useEffect} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport IconButton from '@material-ui/core/IconButton';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport {makeStyles} from '@material-ui/styles';\nimport axios from 'axios';\nimport {ChatContext} from '../contexts/chatContext';\nimport {NavContext} from '../contexts/navContext';\n\nconst useStyles=makeStyles({\n    nav:{\n        height: '40px',\n        display: 'flex',\n        justifyContent: 'center',\n        zIndex: 100\n    },\n    tool:{\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    rightmenu:{\n        position:'relative',\n        left: '5px',\n        background:'#424242',\n        color: 'white'\n    }\n});\n\nfunction Navbar({history, setUserData}){\n    const {chatData} = useContext(ChatContext);\n    const {navData, navDispatch} = useContext(NavContext);\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const anchorRef = useRef(null);\n\n    const handleToggle = () => {\n        setOpen(prevOpen => !prevOpen);\n      };\n    \n      const handleClose = event => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n          return;\n        }\n    \n        setOpen(false);\n      };\n    \n      function handleListKeyDown(event) {\n        if (event.key === 'Tab') {\n          event.preventDefault();\n          setOpen(false);\n        }\n      }\n    \n      // return focus to the button when we transitioned from !open -> open\n      const prevOpen = React.useRef(open);\n      useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n          anchorRef.current.focus();\n        }\n    \n        prevOpen.current = open;\n      }, [open]);\n\n    const handleLogOut = () => {\n        axios.get('/api/actions/logout', {withCredentials:true})\n        .then(res => {\n            if(res.data.loggedIn === false){\n                setUserData(res.data);\n                history.push('/');\n            }\n        })\n        .catch((err) => console.log(err));\n    }\n    const handleAddMem = () => {\n        navDispatch({type:'ADDMEM', open:true});\n    }\n    const handleLeftDrawer = () => {\n        navDispatch({type:'LEFTDRAWER', open:true})\n    }\n\n    const handleRightDrawer = () => {\n        navDispatch({type:'RIGHTDRAWER', open:true});\n    }\n    \n    const handleToggleInfo = () => {\n        navDispatch({type:'RIGHT', open:!navData.rightNav.root})\n    }\n\n    return(\n        <AppBar position=\"static\" className={classes.nav}>\n            <Toolbar className={classes.tool}>\n                <Hidden smUp>\n                    <IconButton onClick={handleLeftDrawer} size='small'>\n                        <MenuIcon />\n                    </IconButton>\n                </Hidden>\n\n                <Typography>{chatData.selected.name}</Typography>\n\n                <Hidden mdUp>\n                    <IconButton ref={anchorRef} aria-controls={open ? 'menu-list-grow': undefined} \n                    aria-haspopup='true' onClick={handleToggle} size='small'>\n                        <SettingsIcon />\n                    </IconButton>\n\n                    <Popper anchorEl={anchorRef.current} open={open} role={undefined} transition disablePortal>\n                        {({ TransitionProps, placement }) => (\n                            <Grow\n                            {...TransitionProps}\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                            >\n                            <Paper className={classes.rightmenu}>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                        <MenuItem onClick={e => {handleClose(e); handleRightDrawer(e)}}>Group Information</MenuItem>\n                                        <MenuItem onClick={e => {handleClose(e); handleAddMem(e);}}>Invite</MenuItem>\n                                        <MenuItem onClick={e=> {handleClose(e); handleLogOut(e);}}>Logout</MenuItem>\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                            </Grow>\n                        )}\n                    </Popper>\n                </Hidden>\n\n\n                <Hidden smDown>\n                    <div>\n                        <IconButton onClick={handleToggleInfo} size='small'>\n                            <GroupIcon />\n                        </IconButton>\n                        <IconButton onClick={handleAddMem} size='small'>\n                            <PersonAddIcon />\n                        </IconButton>\n                        <Button onClick={handleLogOut}>Log Out</Button>\n                    </div>\n                </Hidden>\n\n            </Toolbar>\n        </AppBar>\n    )\n}\nexport default Navbar;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport format from 'date-fns/format';\n\nconst useStyle = makeStyles({\n    root:{\n        alignItems: 'start'\n    },\n    avatar:{\n        margin: '0 15px'\n    },\n    span:{\n        marginLeft: '10px'\n    }\n});\n\nfunction Message({message}){\n    const classes = useStyle();\n    const date = new Date(message.time);\n\n    return(\n        <ListItem className={classes.root}>\n            <Avatar className={classes.avatar}>{message.username[0].toUpperCase()}</Avatar>\n            <div>\n                <Typography><strong>{message.username}</strong><span className={classes.span}>{format(date, 'hh:mm aa')}</span></Typography>\n                <Typography>{message.text} </Typography>\n            </div>\n        </ListItem>\n    );\n}\n\n\nexport default Message;","import React from 'react'\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/styles';\n\nconst useStyle = makeStyles({\n    root:{\n        position: 'relative',\n        width: '100%',\n        padding: '20px 0',\n    },\n    text:{\n        position:'absolute',\n        zIndex: 80,\n        top: 0,\n        left: '50%',\n        transform: 'translateX(-50%)',\n        backgroundColor: '#fafafa',\n        padding: '8px 12px',\n        borderRadius: '25px',\n        whiteSpace: 'nowrap'\n    },\n    divider:{\n        width:'95%',\n        margin: '0 auto',\n    }\n})\n\nexport default function DateDivider({date}) {\n    const classes = useStyle();\n\n    return (\n        <div className={classes.root}>\n            <Typography className={classes.text}>{date}</Typography>\n            <Divider className={classes.divider} />\n        </div>\n    )\n}\n","import React from 'react';\nimport uuid from 'uuid/v4';\nimport Message from './Message';\nimport DateDivider from './DateDivider';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport format from 'date-fns/format';\nimport {makeStyles} from '@material-ui/styles';\n\nconst useStyle = makeStyles({\n    paper:{\n        background: '#fafafa',\n        overflow: 'auto',\n        flexGrow: 1,\n        flexShrink: 100\n    },\n    list:{\n        margin: 0,\n        padding: 0,\n        wordBreak: 'break-word'\n    }\n});\n\nfunction ChatWindow({currentGroup}){\n    const classes = useStyle();\n\n    const formatMessages = (messages) => {\n        let results = [];\n        let dates = {};\n        let memberMap = currentGroup.memberMap;\n        \n        // loop through each message\n        for(let i = 0; i < messages.length; i++){\n            // format the date of each message\n            const date = new Date(messages[i].time);\n            const formatedDate = format(date, 'E MMMM dd, yyyy');\n\n            // check if the date is already in the dates hashtable\n            if(!dates[formatedDate]){\n                // if it isn't set it equal to true in the hashtable and push the date into results array\n                dates[formatedDate] = true;\n                results.push({date: formatedDate, type: 'date'});\n            }\n\n            //perform a join using the memberMap hashtable and add to results array\n            results.push({...messages[i], username: memberMap[messages[i].id].username, type: 'message'})\n        }\n\n        return results;\n    }\n\n    return(\n        <Paper className={classes.paper}>\n            <List className={classes.list}>\n                {formatMessages(currentGroup.messages).map( message => {\n                    if(message.type === 'message'){\n                        return <Message key={uuid()} message={message}/>\n                    } else {\n                        return <DateDivider date={message.date} />\n                    }\n                })}   \n            </List>\n        </Paper>\n    );\n}\n\nexport default ChatWindow;","import React, {useEffect} from 'react';\nimport useInput from '../hooks/useInput';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles} from '@material-ui/styles'\n\nconst useStyles = makeStyles({\n    root:{\n        display: 'flex',\n        height: '40px',\n    },\n    input:{\n        fontSize: '1rem',\n        flexGrow: '1'\n    },\n    button:{\n        borderRadius:0\n    }\n})\n\nfunction ChatInput({onConfirm, selected}){\n    const classes = useStyles();\n    const [message, setMessage, clearMessage] = useInput();\n\n    useEffect(()=>{\n        clearMessage();\n        //eslint-disable-next-line\n    },[selected]);\n    function handleClick(){\n        onConfirm(message);\n        clearMessage();\n    }\n    \n    function handleEnter(e){\n        if(e.key === 'Enter'){\n            e.preventDefault();\n            handleClick();\n        }\n    }\n\n    return(\n        <div className={classes.root}>\n            <input className={classes.input} type=\"text\" value={message} onChange={setMessage} onKeyPress={handleEnter} />\n            <Button className={classes.button} color=\"primary\" variant=\"contained\" onClick={handleClick}>Send</Button>\n        </div>\n    );\n}\n\nexport default ChatInput;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport Avatar from '@material-ui/core/Avatar';\nimport {makeStyles} from '@material-ui/styles';\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DoneIcon from '@material-ui/icons/Done';\n\n\nconst useStyles = makeStyles({\n    root:{\n        display:'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    avatar:{\n        fontSize: '0.9rem',\n        width: '20px',\n        height: '20px',\n        marginRight: '10px'\n    },\n    user:{\n        display:'flex'\n    },\n    add:{\n        fontSize: '1rem'\n    }\n});\n\nexport default function MemberResultCard({username, userId, status, sendInvite}) {\n    const classes = useStyles();\n\n    const handleClick = () => {\n        sendInvite(userId);\n    }\n    let statusButton;\n\n    switch(status){\n        case 'active':\n            statusButton = <DoneIcon />\n            break;\n        case 'pending':\n            statusButton = <Button>Pending</Button>\n            break;\n        default:\n            statusButton = <IconButton size='small' onClick={handleClick}>\n                                <AddCircleOutlineIcon className={classes.add} />\n                            </IconButton>\n            break;\n    }\n                        \n\n    return (\n        <ListItem className={classes.root}>\n            <div className={classes.user}>\n                <Avatar className={classes.avatar}>{username[0].toUpperCase()}</Avatar>\n                <span>{username}</span>\n            </div>\n            {statusButton}\n        </ListItem>\n    )\n}\n","import React,{useState} from 'react';\nimport useInput from '../hooks/useInput';\nimport MemberResultCard from './MemberResultCard';\nimport {makeStyles} from '@material-ui/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport axios from 'axios';\nimport uuid from 'uuid/v4';\n\n\nconst useStyles = makeStyles({\n    root:{\n        display: 'flex',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        zIndex: 500,\n        height: '100%',\n        width: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: 'rgba(0,0,0,0.4)'\n    },\n    paper:{\n        padding: '15px',\n        textAlign: 'center',\n        background: 'white',\n        height: '90%',\n        maxHeight: '700px',\n        width: '80%',\n        maxWidth: '300px',\n        overflow: 'auto'\n    },\n});\n\nexport default function AddMember({sendInvite, filterResults, closeAddMem}) {\n    const classes = useStyles();\n    const [username, setUsername] = useInput();\n    const [searchResults, setSearchResults] = useState([]);\n\n    const searchUser = (name) =>{\n        const url = '/api/users/search/'+ name;\n        axios.get(url, {withCredentials:true})\n        .then( res => {\n            if(res.data.status === 1){\n                setSearchResults(res.data.data);\n            }\n        })\n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        searchUser(username);\n    }\n\n    return (\n        <div className={classes.root}>\n            <ClickAwayListener onClickAway={closeAddMem}>\n                <Paper className={classes.paper} >\n                    <Typography>Add a Member</Typography>\n                    <form onSubmit={handleSubmit}>\n                        <Input className={classes.input} id='username' name='username' placeholder='Username' \n                        value={username} onChange={setUsername} />\n                        <List>\n                            {filterResults(searchResults)\n                                .map(result => <MemberResultCard key={uuid()} \n                                                                username={result.username} \n                                                                userId={result._id}\n                                                                status= {result.status} \n                                                                sendInvite = {sendInvite}\n                                                                />)}\n                        </List>\n                        <Button className={classes.button} type='submit'>Search</Button>\n                    </form>\n                    <Button className={classes.button} onClick={closeAddMem} >Close</Button>\n                </Paper>\n            </ClickAwayListener>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport default function GroupDescription({description}) {\n    return (\n        <div>\n            <p>{description ? description : '[No description has been written]'}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport {makeStyles} from '@material-ui/styles';\nimport uuid from 'uuid/v4';\n\nconst useStyles = makeStyles({\n    list:{\n        margin: 0\n    },\n    avatar:{\n        marginRight: '10px'\n    }\n})\n\nexport default function GroupMembers({groupMembers}) {\n    const classes = useStyles();\n    return (\n        <div>\n            <h2>Group Members</h2>\n            <List className={classes.list}>\n                {groupMembers.map(member => <ListItem key={uuid()}>\n                                                <Avatar className={classes.avatar}>{member.username[0].toUpperCase()}</Avatar>\n                                                <span>{member.username}</span>\n                                            </ListItem>)}\n            </List>\n        </div>\n    )\n}\n","import React, {useContext} from 'react';\nimport AddMember from './AddMember';\nimport GroupDescription from './GroupDescription';\nimport Hidden from '@material-ui/core/Hidden';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport {makeStyles} from '@material-ui/styles';\nimport {NavContext} from '../contexts/navContext';\nimport {ChatContext} from '../contexts/chatContext';\nimport axios from 'axios';\nimport GroupMembers from './GroupMembers';\n\n\nconst useStyles = makeStyles({\n    root:{\n        width: '250px',\n        height: '100%',\n        background:'#424242',\n        overflow: 'auto'\n    },\n    hidden:{\n        display:'none'\n    },\n    paper:{\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '15px',\n        textAlign: 'center',\n        border: 'none',\n        color: 'white'\n    },\n    divider:{\n        width: '85%',\n        backgroundColor: '#616161'\n    }\n});\n\n\nexport default function RightNav({updateInvite, updateMembers}) {\n    const {navData, navDispatch} = useContext(NavContext);\n    const {chatData, chatDispatch} = useContext(ChatContext);\n    const classes = useStyles();\n    const addMemStatus = navData.rightNav.addMem;\n\n    const groupIndex = chatData.selected.index;\n    const selectedGroupId = chatData.selected._id;\n    const currUserId = chatData.user._id;\n    const groupDescription = chatData.groups[groupIndex].description;\n    const groupMembers = chatData.groups[groupIndex].activeMembers;\n    const {activeMembers, pendingMembers, pendingRequests} = chatData.groups[groupIndex];\n\n    const sendInvite = (userId) =>{\n        axios.post('/api/groups/' + selectedGroupId + '/members',{userId: userId, \n            withCredentials:true})\n            .then(res => {\n                if(res.data.status === 1){\n                    chatDispatch({type:'ADD_MEMBER', groupId:selectedGroupId, memberId: userId});\n                    updateInvite(userId);\n                    updateMembers(selectedGroupId);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    //filter the search results based on if the user is the current user, already a member,\n    //or has a pending invite\n    const filterResults = (results) => {\n        let filtered = [];\n        let activeMembersId = activeMembers.map( member => member._id)\n        for(let i = 0; i < results.length; i++){\n            let current = results[i];\n            if(current._id === currUserId){\n                continue;\n            }\n            //check if current user is an active member \n            //and creates a key 'status' set to 'active' for the user object\n            if(activeMembersId.includes(current._id)){\n                current['status'] = 'active';\n            }\n            //check if current user had a pending request for the group\n            else if(pendingMembers.includes(current._id) || pendingRequests.includes(current._id)){\n                current['status'] = 'pending';\n            } else {\n                current['status'] = 'add';\n            }\n            filtered.push(current)\n        }\n        return filtered;\n    }\n    \n    const closeAddMem = () => {\n        navDispatch({type:'ADDMEM', open:false});\n    }\n    \n    const handleClickAway = () => {\n        navDispatch({type:'RIGHTDRAWER', open:false});\n    }\n\n    const rightNav = <div className={classes.paper}>\n                        <GroupDescription description={groupDescription} />\n                        <Divider className={classes.divider} variant='middle' />\n                        <GroupMembers groupMembers={groupMembers} />\n                     </div>\n    return (\n        <>\n            <Hidden smDown >\n                <div className={navData.rightNav.root ? classes.root : classes.hidden}>\n                    {rightNav}\n                </div>\n            </Hidden>\n            <Hidden mdUp>\n                <Drawer open={navData.rightNav.drawer} anchor='right' ModalProps={{ onBackdropClick: handleClickAway }}>\n                    <div className={classes.root}>\n                        {rightNav}\n                    </div>\n                </Drawer>\n            </Hidden>\n            {addMemStatus ? \n                <AddMember closeAddMem={closeAddMem} sendInvite={sendInvite} \n                filterResults={filterResults}/> : ''}\n        </>\n    )\n}\n","import React from 'react';\nimport Navbar from './Navbar';\nimport ChatWindow from './ChatWindow';\nimport ChatInput from './ChatInput';\nimport RightNav from './RightNav';\nimport {makeStyles} from '@material-ui/styles';\n\n\nconst useStyles = makeStyles({\n    root:{\n        display: 'flex',\n        flexGrow: 1,\n        flexDirection: 'column'\n    }\n});\n\nexport default function ChatRoom({newMessage, currentGroup, selected, updateInvite, updateMembers, history, setUserData}) {\n    const classes = useStyles();\n    return (\n        <>\n           <div className={classes.root}>\n                <Navbar history={history} setUserData={setUserData} />\n                <ChatWindow currentGroup={currentGroup} />\n                <ChatInput onConfirm={newMessage} selected={selected} />\n            </div>\n            <RightNav currentGroup={currentGroup} updateInvite={updateInvite} updateMembers={updateMembers} />\n        </>\n    )\n}\n","import React, {useEffect, useState, useContext} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport LeftNav from '../components/LeftNav';\nimport ChatRoom from '../components/ChatRoom';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport {ChatContext} from '../contexts/chatContext';\nimport {makeStyles} from '@material-ui/styles';\n\n\nconst useStyles = makeStyles({\n    root:{\n        display:'flex',\n        height: '100vh',\n        width: '100vw'\n    },\n    middle:{\n        display: 'flex',\n        flexGrow: 1,\n        flexDirection: 'column'\n    }\n});\n\nlet socket;\nfunction Chat({username, loggedIn, setUserData}){\n    const classes = useStyles();\n    const history = useHistory();\n    const {chatData, chatDispatch} = useContext(ChatContext);\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        //redirect if user is not logged in\n        if(!loggedIn){\n            history.push('/');\n        } else {\n            //fetch current chat data from DB\n            axios.get('/api/actions/data', {withCredentials:true})\n            .then(res => {\n                chatDispatch({type:'INIT', payload: res.data})\n                setLoaded(true);\n            }) \n        }\n    }, [history, loggedIn, chatDispatch]);\n\n    useEffect(() => {\n        if(loaded){\n            socket = io();\n            //listens for new messages from the backend and updates state\n            socket.on('message', (room, message) => {\n                chatDispatch({type:'NEW_MSG', room:room, message:message})\n            });\n\n            //listener to update pending list\n            socket.on('update_pendinglist', ()=> {\n                axios.get('/api/users/pendinginvites', {withCredentials:true})\n                .then(res => {\n                    if(res.data.status === 1){\n                        chatDispatch({type:'UPDATE_PENDING', payload:res.data.data}) \n                    }\n                })\n                .catch(err => console.log(err)); \n            });\n\n            //listener to update member list\n            socket.on('update_memberlist', (groupId) => {\n                axios.get('/api/groups/'+ groupId + '/members', {withCredentials:true})\n                .then(res => {\n                    console.log(res);\n                    if(res.data.status === 1){\n                        chatDispatch({type:'UPDATE_MEMBERS', groupId:groupId, payload:res.data.data}) \n                    }\n                })\n                .catch(err => console.log(err)); \n            });\n\n            //on connect joins the rooms on the client side\n            socket.on('connect', () => {\n                chatData.groups.forEach(group => {\n                    socket.emit('room', group._id)\n                })\n                socket.emit('user', chatData.user._id)\n            })\n        }\n        //eslint-disable-next-line\n    }, [loaded])\n\n    const newMessage = (text) => {\n        const message = {id: chatData.user._id, text: text, time: new Date()}\n        socket.emit('message', chatData.selected._id, message);\n        chatDispatch({type:'NEW_MSG', room:chatData.selected._id, message:message});\n    }\n    const joinRoom = (roomId) => {\n        socket.emit('room', roomId)\n    }\n    const updateInvite = (userId) => {\n        socket.emit('update_pendinglist', userId);\n    }\n    const updateMembers = (groupId) => {\n        socket.emit('update_memberlist', groupId);\n    }\n\n    if(loaded){\n        return(\n            <div className={classes.root}>\n                <LeftNav username={username} joinRoom={joinRoom} updateMembers={updateMembers} />\n                {chatData.groups.length > 0 ? \n                    <ChatRoom currentGroup={chatData.groups[chatData.selected.index]} \n                    newMessage={newMessage} updateMembers={updateMembers} selected={chatData.selected}\n                    updateInvite={updateInvite} history={history} setUserData={setUserData}/> : ''}\n                \n            </div>\n        );\n    } else {\n        return(\n            <div>\n                <h1>Loading</h1>\n            </div>\n        )\n    }\n    \n}\n\nexport default Chat","import React, {useEffect, useState} from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport LoginPage from './views/LoginPage';\nimport CreateAccountPage from './views/CreateAccountPage';\nimport ChatPage from './views/ChatPage';\nimport axios from 'axios';\nimport './App.css';\nimport { ChatProvider } from './contexts/chatContext';\nimport { NavProvider} from './contexts/navContext';\n\nfunction App() {\n  const [userData, setUserData] = useState({loggedIn:false});\n\n  useEffect(() =>{\n    axios.get('/api/actions/loggedon', {withCredentials:true})\n      .then( res => setUserData(res.data) )\n      .catch( err => console.log(err) );\n  }, [])\n\n  return (\n    <Switch>\n      <Route exact path = '/'>\n        <LoginPage {...userData} setUserData={setUserData} />\n      </Route>\n      <Route exact path = '/chat'>\n        <ChatProvider>\n        <NavProvider>\n          <ChatPage {...userData} setUserData={setUserData} />\n        </NavProvider>\n        </ChatProvider>\n      </Route>\n      <Route exact path = '/users/new'>\n        <CreateAccountPage />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}